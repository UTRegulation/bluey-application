name: ESLint & Prettier Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quality:
    name: Main Procedure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup environment
        shell: bash
        run: |
          echo "PNPM_HOME=$HOME/.local/share/pnpm" >> $GITHUB_ENV
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Cache Node modules
        uses: actions/cache@v3
        id: node-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile || {
            echo "::error::Failed to install dependencies with frozen lockfile"
            exit 1
          }

      - name: Check for duplicate dependencies
        run: pnpm dedupe --check

      - name: Run quality checks
        id: quality-checks
        continue-on-error: true
        run: |
          echo "Running TypeScript check..."
          pnpm tsc --noEmit
          echo "Running ESLint..."
          pnpm lint
          echo "Running Prettier check..."
          pnpm prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}"

      - name: Build and analyze
        if: always()
        run: |
          echo "Building project..."
          pnpm build
          echo "Analyzing bundle size..."
          du -h .next/static/chunks/* || true

      - name: Check test status
        if: steps.quality-checks.outcome != 'success'
        run: |
          echo "Some quality checks failed!"
          exit 1
